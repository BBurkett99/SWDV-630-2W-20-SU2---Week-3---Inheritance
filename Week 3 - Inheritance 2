Brad Burkett
SWDV 630 2W 20/SU2 - Week 3 - Inheritance 2
Date 07/17/20
See below to see the answers to the five questions this week.
_____________________________________________________________________________
class Spell:
  def __init__(self, incantation, name):
    self.name = name
    self.incantation = incantation
  def __str__(self):
    return self.name + ' ' + self.incantation + '\n' + self.get_description()
  def get_description(self):
    return 'No description'
  def execute(self):
    print (self.incantation)
class Accio(Spell):
  def __init__(self):
    Spell.__init__(self, 'Accio', 'Summoning Charm')
  def get_description(self):
    return 'This charm summons an object to the caster, potentially over a significant distance.'
class Confundo(Spell):
  def __init__(self):
    Spell.__init__(self, 'Confundo', 'Confundus Charm')
  def get_description(self):
    return 'Causes the victim to become confused and befuddled.'
def study_spell(spell):
  print (spell)
spell = Accio()
spell.execute()
study_spell(spell)
study_spell(Confundo())
print(Accio()) 


Answer the following questions:
1. What are the parent and child classes here?
    Parent class is Spell
    Child classes are Accio(Spell): and Confundo(Spell):
2. What are the base and sub-classes?
   Base class is Spell
   Subclasses are Accio(Spell): and Confundo(Spell):
3. What is the output from this code?   Try without running if you can
   Accio
   Summoning Charm Accio
   No description
   Confundus Charm Confundo
   Causes the victim to become confused and befuddled.

4. When study_spell(Confundo()) executes...what get_description method gets called and why?
It looks like when study_spell(Confundo()) executes it calls the get_description() method from the subclass, Confundo.
I believe with this method being part of the subclass, it then overrides the “def get_description(self)” that is a part of the Base Spell class.
5. The statement print Accio() needs to print ‘This charm summons an object to the caster, potentially over a significant distance’)? Write down the code that we need to add and/or change.
I have added this line to the Accio(spell) subclass accompanied by a print statement.
  def get_description(self):
    return 'This charm summons an object to the caster, potentially over a significant distance.' 
